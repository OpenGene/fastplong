name: release
on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  job:
    name: ${{ matrix.os }}-${{ github.workflow }}
    env: 
      GH_TOKEN: ${{ github.token }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, macos-13, macos-15]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: install build dependencies (Ubuntu)
        run: sudo apt update && sudo apt install -y libisal-dev
        if: runner.os == 'Linux'
      - name: install build dependencies (MacOS)
        run: brew install isa-l
        if: runner.os == 'macOS'

      # Setup the build machine with the most recent versions of CMake and Ninja. Both are cached if not already: on subsequent runs both will be quickly restored from GitHub cache service.
      - uses: lukka/get-cmake@latest
      - name: Restore from cache the dependencies and generate project files
        run: |
          cmake --preset ninja-multi-vcpkg

      - name: Build (Release configuration)
        run: |
          cmake --build --preset ninja-vcpkg-release

      # Test the whole project with CTest, again Release configuration only.
      - name: Test (Release configuration)
        run: |
          ctest --preset test-release
      - name: release
        run: |
          set -x
          TAG_NAME=${{ github.ref }}
          TAG_NAME=${TAG_NAME#refs/tags/}

          OS=$(uname -s | tr '[:upper:]' '[:lower:]')
          FILE=fastplong_${OS}_$(arch)
          gh release create $TAG_NAME || :
          cp builds/ninja-multi-vcpkg/Release/fastplong $FILE
          gh release upload $TAG_NAME $FILE
